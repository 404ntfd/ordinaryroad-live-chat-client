/*
 * MIT License
 *
 * Copyright (c) 2023 OrdinaryRoad
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: douyin.proto

// Protobuf Java Version: 3.25.3
package tech.ordinaryroad.live.chat.client.codec.douyin.protobuf;

/**
 * <pre>
 * from https://github.com/scx567888/live-room-watcher/blob/master/src/main/proto/douyin_hack/webcast/im/RoomMsgTypeEnum.proto
 * </pre>
 *
 * Protobuf enum {@code RoomMsgTypeEnum}
 */
public enum RoomMsgTypeEnum
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>DEFAULTROOMMSG = 0;</code>
   */
  DEFAULTROOMMSG(0),
  /**
   * <code>ECOMLIVEREPLAYSAVEROOMMSG = 1;</code>
   */
  ECOMLIVEREPLAYSAVEROOMMSG(1),
  /**
   * <code>CONSUMERRELATIONROOMMSG = 2;</code>
   */
  CONSUMERRELATIONROOMMSG(2),
  /**
   * <code>JUMANJIDATAAUTHNOTIFYMSG = 3;</code>
   */
  JUMANJIDATAAUTHNOTIFYMSG(3),
  /**
   * <code>VSWELCOMEMSG = 4;</code>
   */
  VSWELCOMEMSG(4),
  /**
   * <code>MINORREFUNDMSG = 5;</code>
   */
  MINORREFUNDMSG(5),
  /**
   * <code>PAIDLIVEROOMNOTIFYANCHORMSG = 6;</code>
   */
  PAIDLIVEROOMNOTIFYANCHORMSG(6),
  /**
   * <code>HOSTTEAMSYSTEMMSG = 7;</code>
   */
  HOSTTEAMSYSTEMMSG(7),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>DEFAULTROOMMSG = 0;</code>
   */
  public static final int DEFAULTROOMMSG_VALUE = 0;
  /**
   * <code>ECOMLIVEREPLAYSAVEROOMMSG = 1;</code>
   */
  public static final int ECOMLIVEREPLAYSAVEROOMMSG_VALUE = 1;
  /**
   * <code>CONSUMERRELATIONROOMMSG = 2;</code>
   */
  public static final int CONSUMERRELATIONROOMMSG_VALUE = 2;
  /**
   * <code>JUMANJIDATAAUTHNOTIFYMSG = 3;</code>
   */
  public static final int JUMANJIDATAAUTHNOTIFYMSG_VALUE = 3;
  /**
   * <code>VSWELCOMEMSG = 4;</code>
   */
  public static final int VSWELCOMEMSG_VALUE = 4;
  /**
   * <code>MINORREFUNDMSG = 5;</code>
   */
  public static final int MINORREFUNDMSG_VALUE = 5;
  /**
   * <code>PAIDLIVEROOMNOTIFYANCHORMSG = 6;</code>
   */
  public static final int PAIDLIVEROOMNOTIFYANCHORMSG_VALUE = 6;
  /**
   * <code>HOSTTEAMSYSTEMMSG = 7;</code>
   */
  public static final int HOSTTEAMSYSTEMMSG_VALUE = 7;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @Deprecated
  public static RoomMsgTypeEnum valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static RoomMsgTypeEnum forNumber(int value) {
    switch (value) {
      case 0: return DEFAULTROOMMSG;
      case 1: return ECOMLIVEREPLAYSAVEROOMMSG;
      case 2: return CONSUMERRELATIONROOMMSG;
      case 3: return JUMANJIDATAAUTHNOTIFYMSG;
      case 4: return VSWELCOMEMSG;
      case 5: return MINORREFUNDMSG;
      case 6: return PAIDLIVEROOMNOTIFYANCHORMSG;
      case 7: return HOSTTEAMSYSTEMMSG;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<RoomMsgTypeEnum>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      RoomMsgTypeEnum> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<RoomMsgTypeEnum>() {
          public RoomMsgTypeEnum findValueByNumber(int number) {
            return RoomMsgTypeEnum.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return Douyin.getDescriptor().getEnumTypes().get(1);
  }

  private static final RoomMsgTypeEnum[] VALUES = values();

  public static RoomMsgTypeEnum valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private RoomMsgTypeEnum(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:RoomMsgTypeEnum)
}

