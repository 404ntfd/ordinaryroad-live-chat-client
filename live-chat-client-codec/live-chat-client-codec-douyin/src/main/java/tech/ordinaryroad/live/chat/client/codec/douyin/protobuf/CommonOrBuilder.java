/*
 * MIT License
 *
 * Copyright (c) 2023 OrdinaryRoad
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: douyin.proto

// Protobuf Java Version: 3.25.3
package tech.ordinaryroad.live.chat.client.codec.douyin.protobuf;

public interface CommonOrBuilder extends
    // @@protoc_insertion_point(interface_extends:Common)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string method = 1;</code>
   * @return The method.
   */
  String getMethod();
  /**
   * <code>string method = 1;</code>
   * @return The bytes for method.
   */
  com.google.protobuf.ByteString
      getMethodBytes();

  /**
   * <code>uint64 msg_id = 2;</code>
   * @return The msgId.
   */
  long getMsgId();

  /**
   * <code>uint64 room_id = 3;</code>
   * @return The roomId.
   */
  long getRoomId();

  /**
   * <code>uint64 create_time = 4;</code>
   * @return The createTime.
   */
  long getCreateTime();

  /**
   * <code>uint32 monitor = 5;</code>
   * @return The monitor.
   */
  int getMonitor();

  /**
   * <code>bool is_show_msg = 6;</code>
   * @return The isShowMsg.
   */
  boolean getIsShowMsg();

  /**
   * <code>string describe = 7;</code>
   * @return The describe.
   */
  String getDescribe();
  /**
   * <code>string describe = 7;</code>
   * @return The bytes for describe.
   */
  com.google.protobuf.ByteString
      getDescribeBytes();

  /**
   * <code>.Text display_text = 8;</code>
   * @return Whether the displayText field is set.
   */
  boolean hasDisplayText();
  /**
   * <code>.Text display_text = 8;</code>
   * @return The displayText.
   */
  Text getDisplayText();
  /**
   * <code>.Text display_text = 8;</code>
   */
  TextOrBuilder getDisplayTextOrBuilder();

  /**
   * <pre>
   *  DisplayText displayText = 8;
   * </pre>
   *
   * <code>uint64 fold_type = 9;</code>
   * @return The foldType.
   */
  long getFoldType();

  /**
   * <code>uint64 anchor_fold_type = 10;</code>
   * @return The anchorFoldType.
   */
  long getAnchorFoldType();

  /**
   * <code>uint64 priorityScore = 11;</code>
   * @return The priorityScore.
   */
  long getPriorityScore();

  /**
   * <code>string logId = 12;</code>
   * @return The logId.
   */
  String getLogId();
  /**
   * <code>string logId = 12;</code>
   * @return The bytes for logId.
   */
  com.google.protobuf.ByteString
      getLogIdBytes();

  /**
   * <code>string msgProcessFilterK = 13;</code>
   * @return The msgProcessFilterK.
   */
  String getMsgProcessFilterK();
  /**
   * <code>string msgProcessFilterK = 13;</code>
   * @return The bytes for msgProcessFilterK.
   */
  com.google.protobuf.ByteString
      getMsgProcessFilterKBytes();

  /**
   * <code>string msgProcessFilterV = 14;</code>
   * @return The msgProcessFilterV.
   */
  String getMsgProcessFilterV();
  /**
   * <code>string msgProcessFilterV = 14;</code>
   * @return The bytes for msgProcessFilterV.
   */
  com.google.protobuf.ByteString
      getMsgProcessFilterVBytes();

  /**
   * <code>.User user = 15;</code>
   * @return Whether the user field is set.
   */
  boolean hasUser();
  /**
   * <code>.User user = 15;</code>
   * @return The user.
   */
  User getUser();
  /**
   * <code>.User user = 15;</code>
   */
  UserOrBuilder getUserOrBuilder();

  /**
   * <pre>
   *  Room room = 16;
   * </pre>
   *
   * <code>uint64 anchor_fold_type_v2 = 17;</code>
   * @return The anchorFoldTypeV2.
   */
  long getAnchorFoldTypeV2();

  /**
   * <code>uint64 process_at_sei_time_ms = 18;</code>
   * @return The processAtSeiTimeMs.
   */
  long getProcessAtSeiTimeMs();

  /**
   * <code>uint64 random_dispatch_ms = 19;</code>
   * @return The randomDispatchMs.
   */
  long getRandomDispatchMs();

  /**
   * <code>bool is_dispatch = 20;</code>
   * @return The isDispatch.
   */
  boolean getIsDispatch();

  /**
   * <code>uint64 channel_id = 21;</code>
   * @return The channelId.
   */
  long getChannelId();

  /**
   * <code>uint64 diff_sei2abs_second = 22;</code>
   * @return The diffSei2absSecond.
   */
  long getDiffSei2AbsSecond();

  /**
   * <code>uint64 anchor_fold_duration = 23;</code>
   * @return The anchorFoldDuration.
   */
  long getAnchorFoldDuration();

  /**
   * <code>uint64 app_id = 24;</code>
   * @return The appId.
   */
  long getAppId();
}
